<div class="bg-[#f7f6f5] rounded-[100px] flex-1 justify-center items-center">
    <!-- Breadcrumb -->
    <div class="flex p-10 ml-10 items-center space-x-4">
        <h3 class="text-gray-600 text-lg">Products</h3>
        <div class="w-px h-7 bg-gray-300"></div>

        <!-- 4 Grid Icon -->
        <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M2 4.33333C2 2.58319 2.01874 2 4.33333 2C6.64793 2 6.66667 2.58319 6.66667 4.33333C6.66667 6.08348 6.67405 6.66667 4.33333 6.66667C1.99262 6.66667 2 6.08348 2 4.33333Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M9.33203 4.33333C9.33203 2.58319 9.35077 2 11.6654 2C13.98 2 13.9987 2.58319 13.9987 4.33333C13.9987 6.08348 14.0061 6.66667 11.6654 6.66667C9.32465 6.66667 9.33203 6.08348 9.33203 4.33333Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M2 11.6654C2 9.91522 2.01874 9.33203 4.33333 9.33203C6.64793 9.33203 6.66667 9.91522 6.66667 11.6654C6.66667 13.4155 6.67405 13.9987 4.33333 13.9987C1.99262 13.9987 2 13.4155 2 11.6654Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M9.33203 11.6654C9.33203 9.91522 9.35077 9.33203 11.6654 9.33203C13.98 9.33203 13.9987 9.91522 13.9987 11.6654C13.9987 13.4155 14.0061 13.9987 11.6654 13.9987C9.32465 13.9987 9.33203 13.4155 9.33203 11.6654Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>

        <!-- Arrow -->
        <svg width="24" height="16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M5.668 3.335L10.335 8 5.668 12.668M13.668 3.335L18.335 8 13.668 12.668"
                stroke="black"
                stroke-width="1.2"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>

        <h3 class="text-[black] text-lg">Add Sub Service/Items</h3>
    </div>

    <!-- Main Content Container -->
    <div class="w-[1400px] h-[640px] bg-white rounded-2xl p-4 mx-auto flex">
        <div class="w-full pr-6 overflow-auto">
            <div class="w-[40%]">
                <!-- Select Category (Checkbox Buttons) -->
                <div class="w-full mb-4">
                    <label class="block mb-2 text-sm font-medium text-gray-700">
                        Select Category
                    </label>
                    <div class="flex items-center gap-3 px-4 py-3 bg-white">
                        <label for="cat-men" class="flex items-center gap-2 cursor-pointer">
                            <input
                                id="cat-men"
                                type="checkbox"
                                name="category"
                                value="Men"
                                class="hidden peer"
                            />
                            <div
                                class="peer-checked:bg-[#5DCAD1] peer-checked:text-white px-3 py-1 rounded-lg border border-gray-300 text-gray-700 text-sm"
                            >
                                Men
                            </div>
                        </label>

                        <label for="cat-women" class="flex items-center gap-2 cursor-pointer">
                            <input
                                id="cat-women"
                                type="checkbox"
                                name="category"
                                value="Women"
                                class="hidden peer"
                            />
                            <div
                                class="peer-checked:bg-[#5DCAD1] peer-checked:text-white px-3 py-1 rounded-lg border border-gray-300 text-gray-700 text-sm"
                            >
                                Women
                            </div>
                        </label>

                        <label for="cat-kids" class="flex items-center gap-2 cursor-pointer">
                            <input
                                id="cat-kids"
                                type="checkbox"
                                name="category"
                                value="Kids"
                                class="hidden peer"
                            />
                            <div
                                class="peer-checked:bg-[#5DCAD1] peer-checked:text-white px-3 py-1 rounded-lg border border-gray-300 text-gray-700 text-sm"
                            >
                                Kids
                            </div>
                        </label>

                        <label for="cat-others" class="flex items-center gap-2 cursor-pointer">
                            <input
                                id="cat-others"
                                type="checkbox"
                                name="category"
                                value="Others"
                                class="hidden peer"
                            />
                            <div
                                class="peer-checked:bg-[#5DCAD1] peer-checked:text-white px-3 py-1 rounded-lg border border-gray-300 text-gray-700 text-sm"
                            >
                                Others
                            </div>
                        </label>
                    </div>
                </div>

                <!-- Add Items with Button -->
                <div class="flex shadow-lg rounded-xl">
                    <input
                        id="addItemInput"
                        type="text"
                        placeholder="Select Items"
                        class="flex-1 px-4 py-3 rounded-l-xl border border-r-0 border-gray-300 text-sm text-gray-700 bg-gray-100"
                        disabled
                    />
                    <button
                        id="addItemBtn"
                        class="px-5 py-3 bg-[#b6c1d2] text-white text-sm font-semibold rounded-r-xl"
                        disabled
                    >
                        + Add
                    </button>
                </div>
            </div>
            <!-- Down Panel -->
            <div class="w-full overflow-x-auto">
                <div id="priceSection" class="flex-1 hidden overflow-x-auto mt-4">
                    <p class="text-md text-gray-900 font-medium mb-2">Enter Price</p>

                    <div class="bg-white rounded-2xl p-4 w-full max-w-full mt-3">
                        <table class="w-full table-fixed border-separate border-spacing-y-4">
                            <thead class="sticky top-0 bg-[#54B7C5] text-white">
                                <tr class="bg-[#54B7C5] text-white rounded">
                                    <th class="py-4 px-3 text-left rounded-l-xl">Selected Item</th>
                                    <th class="py-4 px-3 text-left"></th>
                                    <th class="py-4 px-3 text-left">Ironing</th>
                                    <th class="py-4 px-3 text-left">Dry Clean</th>
                                    <th class="py-4 px-3 text-left">Wash & Iron</th>
                                    <th class="py-4 px-3 text-left">Wash</th>
                                    <th class="py-4 px-3 text-left rounded-r-xl"></th>
                                </tr>
                            </thead>
                            <tbody id="priceTableBody">
                                <!-- New rows will be added here -->
                            </tbody>
                        </table>
                    </div>
                    <div class="flex justify-center mt-4">
                        <button
                            onclick="window.location.href='/spadmin/products'"
                            id="saveButton"
                            class="shadow-xl flex justify-center items-center p-3 w-full mt-3 max-w-2xl rounded-md bg-[#163F75] hover:bg-[#163F75]/90 text-white"
                        >
                            Save
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Clothes List Modal -->
<div
    id="clothesModal"
    tabindex="-1"
    aria-hidden="true"
    class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto h-[100vh] max-h-full bg-black bg-opacity-50 flex justify-center items-center"
>
    <div
        class="relative w-full max-w-4xl max-h-[90vh] bg-white rounded-lg shadow-lg overflow-hidden"
    >
        <!-- Modal Header -->
        <div class="flex items-center justify-between p-4 border-b rounded-t">
            <h3 class="text-xl font-semibold text-gray-900">Select Clothes</h3>
            <button
                type="button"
                onclick="toggleClothesModal(false)"
                class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center"
            >
                âœ•
            </button>
        </div>

        <!-- Modal Body (Clothing Cards Grid) -->
        <div
            class="p-4 overflow-y-auto max-h-[60vh] grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4"
            id="clothesListContainer"
        ></div>

        <!-- Modal Footer -->
        <div class="flex justify-end items-center p-4 border-t rounded-b">
            <button
                onclick="saveSelectedClothes()"
                class="bg-[#163F75] hover:bg-[#0f2f59] text-white px-6 py-2 rounded-xl text-sm font-medium"
            >
                Save
            </button>
        </div>
    </div>
</div>

<script>
    const categoryCheckboxes = document.querySelectorAll(
        "#cat-men, #cat-women, #cat-kids, #cat-others"
    );
    const addItemInput = document.getElementById("addItemInput");
    const addItemButton = document.getElementById("addItemBtn");

    function updateInputState() {
        const anySelected = Array.from(categoryCheckboxes).some((cb) => cb.checked);

        addItemInput.disabled = !anySelected;
        addItemButton.disabled = !anySelected;

        if (anySelected) {
            addItemButton.classList.remove("bg-[#b6c1d2]");
            addItemButton.classList.add("bg-[#163F75]", "hover:bg-[#0f2f59]");
        } else {
            addItemButton.classList.remove("bg-[#163F75]", "hover:bg-[#0f2f59]");
            addItemButton.classList.add("bg-[#b6c1d2]");
        }
    }

    categoryCheckboxes.forEach((cb) => cb.addEventListener("change", updateInputState));
    window.addEventListener("load", updateInputState);

    document.getElementById("addItemBtn").addEventListener("click", () => {
        const selectedCategories = [
            ...document.querySelectorAll("input[name='category']:checked"),
        ].map((cb) => cb.value);

        console.log(selectedCategories);

        if (selectedCategories.length === 0) return;

        fetch(`/spadmin/products/getclothes?categories=${selectedCategories.join(",")}`)
            .then((res) => res.json())
            .then((data) => {
                populateClothesModal(data);
                toggleClothesModal(true);
            });
    });

    function populateClothesModal(clothes) {
        const container = document.getElementById("clothesListContainer");
        container.innerHTML = "";

        const serverURL = window.location.origin;

        clothes.forEach((cloth) => {
            container.innerHTML += `
            <label class="flex items-center space-x-2 my-2">
                <input type="checkbox" class="cloth-checkbox" value="${cloth._id}">
                <img src="${cloth.image}" alt="${cloth.name}" class="w-8 h-8 rounded">
                <span>${cloth.name}</span>
            </label>
        `;
        });
    }

    function toggleClothesModal(show) {
        const modal = document.getElementById("clothesModal");
        modal.classList.toggle("hidden", !show);
    }

    function saveSelectedClothes() {
        const selectedIds = [...document.querySelectorAll(".cloth-checkbox:checked")].map(
            (cb) => cb.value
        );
        if (selectedIds.length === 0) return;

        // Get full cloth details (already in modal)
        const selectedClothes = [...document.querySelectorAll(".cloth-checkbox:checked")].map(
            (cb) => {
                const img = cb.nextElementSibling?.src || "";
                const name = cb.nextElementSibling?.nextElementSibling?.textContent || "";
                return { id: cb.value, name, image: img };
            }
        );

        renderPriceTable(selectedClothes);
        toggleClothesModal(false);
        document.getElementById("priceSection").classList.remove("hidden");
    }

    function renderPriceTable(clothes) {
        const table = document.getElementById("priceTableBody");
        table.innerHTML = ""; // clear previous rows

        const services = ["Ironing", "Dry Clean", "Wash & Iron", "Wash"];

        clothes.forEach((cloth) => {
            // Row 1: Original Price
            const row1 = document.createElement("tr");
            row1.innerHTML = `
            <td rowspan="3" class="align-top px-3 py-2">
                <div class="flex items-center gap-2">
                    <img src="${cloth.image}" alt="${cloth.name}" class="w-10 h-10 rounded-md object-cover" />
                    <span class="font-medium text-gray-800">${cloth.name}</span>
                </div>
            </td>
            <td class="text-sm text-gray-600 font-medium py-1">Original Price</td>
        `;
            services.forEach(() => {
                row1.innerHTML += `
                <td class="py-1">
                    <input type="number" placeholder="0.000"
                        class="w-20 px-2 py-1 border border-red-400 rounded text-center text-sm line-through text-red-500" />
                </td>`;
            });

            // Row 2: Discount Price
            const row2 = document.createElement("tr");
            row2.innerHTML = `<td class="text-sm text-gray-600 font-medium py-1">Discount Price</td>`;
            services.forEach(() => {
                row2.innerHTML += `
                <td class="py-1">
                    <input type="number" placeholder="0.000"
                        class="w-20 px-2 py-1 border border-teal-400 rounded text-center text-sm text-black" />
                </td>`;
            });

            // Row 3: Urgent Price
            const row3 = document.createElement("tr");
            row3.innerHTML = `<td class="text-sm text-gray-600 font-medium py-1">Urgent Price</td>`;
            services.forEach(() => {
                row3.innerHTML += `
                <td class="py-1">
                    <input type="number" placeholder="0.000"
                        class="w-20 px-2 py-1 border border-yellow-400 rounded text-center text-sm text-black" />
                </td>`;
            });

            // Append all 3 rows
            table.appendChild(row1);
            table.appendChild(row2);
            table.appendChild(row3);
        });
    }
</script>
