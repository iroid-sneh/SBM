<div class="bg-[#f7f6f5] rounded-[100px] flex-1 justify-center items-center">
    <!-- Breadcrumb -->
    <div class="flex p-10 ml-10 items-center space-x-4">
        <h3 class="text-gray-600 text-lg">Products</h3>
        <div class="w-px h-7 bg-gray-300"></div>

        <!-- 4 Grid Icon -->
        <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M2 4.33333C2 2.58319 2.01874 2 4.33333 2C6.64793 2 6.66667 2.58319 6.66667 4.33333C6.66667 6.08348 6.67405 6.66667 4.33333 6.66667C1.99262 6.66667 2 6.08348 2 4.33333Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M9.33203 4.33333C9.33203 2.58319 9.35077 2 11.6654 2C13.98 2 13.9987 2.58319 13.9987 4.33333C13.9987 6.08348 14.0061 6.66667 11.6654 6.66667C9.32465 6.66667 9.33203 6.08348 9.33203 4.33333Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M2 11.6654C2 9.91522 2.01874 9.33203 4.33333 9.33203C6.64793 9.33203 6.66667 9.91522 6.66667 11.6654C6.66667 13.4155 6.67405 13.9987 4.33333 13.9987C1.99262 13.9987 2 13.4155 2 11.6654Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M9.33203 11.6654C9.33203 9.91522 9.35077 9.33203 11.6654 9.33203C13.98 9.33203 13.9987 9.91522 13.9987 11.6654C13.9987 13.4155 14.0061 13.9987 11.6654 13.9987C9.32465 13.9987 9.33203 13.4155 9.33203 11.6654Z"
                stroke="#163F75"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>

        <!-- Arrow -->
        <svg width="24" height="16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M5.668 3.335L10.335 8 5.668 12.668M13.668 3.335L18.335 8 13.668 12.668"
                stroke="black"
                stroke-width="1.2"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>

        <h3 class="text-[black] text-lg">Add Service</h3>
    </div>

    <!-- Main Content Container -->
    <div class="w-[1400px] h-[640px] bg-white rounded-2xl p-4 mx-auto flex">
        <!-- Left Panel (Form) -->
        <div class="w-[40%] pr-6">
            <p class="text-md text-gray-900 font-medium mb-2">Add Details of your Service</p>

            <!-- Custom Styled Select Wrapper -->
            <div class="relative w-full mb-4 h-[48px]">
                <div
                    class="flex items-center px-4 py-3 bg-white border border-gray-300 rounded-xl text-sm text-gray-700 shadow-lg"
                >
                    <span id="selectedCategory" class="flex-1 text-gray-500">Select Category</span>
                    <svg
                        class="w-4 h-4 text-gray-400"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        viewBox="0 0 24 24"
                    >
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
                    </svg>
                </div>
                <!-- Hidden actual select -->
                <select
                    id="category"
                    class="absolute inset-0 w-full h-full opacity-0 cursor-pointer"
                    onchange="handleCategoryChange()"
                >
                    <option value="" hidden>Select Category</option>
                    <option value="Bath, Blowdey, Brush & Ears Cleaned">
                        Bath, Blowdey, Brush & Ears Cleaned
                    </option>
                    <option value="Tidy Up (Face Trim & Sanitary Shave)">
                        Tidy Up (Face Trim & Sanitary Shave)
                    </option>
                    <option value="Grooming (Bath, Full Body Haircut, Nail Trim)">
                        Grooming (Bath, Full Body Haircut, Nail Trim)
                    </option>
                </select>
            </div>

            <!-- Add Items with Button -->
            <div class="flex shadow-lg rounded-xl">
                <input
                    id="addItemInput"
                    type="text"
                    placeholder="Add Items"
                    class="flex-1 px-4 py-3 rounded-l-xl border border-r-0 border-gray-300 text-sm text-gray-700 bg-gray-100"
                    disabled
                />
                <button
                    id="addItemBtn"
                    class="px-5 py-3 bg-[#b6c1d2] text-white text-sm font-semibold rounded-r-xl"
                    disabled
                >
                    + Add
                </button>
            </div>
            <!-- Items Container -->
            <div id="itemsContainer" class="flex flex-wrap"></div>
        </div>

        <!-- Vertical Divider -->
        <div class="w-px bg-gray-200 mx-4"></div>

        <!-- Right Panel -->
        <div id="priceSection" class="flex-1 hidden overflow-x-auto">
            <p class="text-md text-gray-900 font-medium mb-2">Enter Price</p>

            <div class="bg-white rounded-2xl shadow-xl p-4 w-full max-w-2xl mt-3">
                <table class="w-full table-auto border-separate border-spacing-y-4">
                    <thead>
                        <tr class="bg-[#54B7C5] text-white rounded">
                            <th class="py-4 px-3 text-left rounded-l-xl">Selected Service</th>
                            <th class="py-4 px-3 text-left">Original Price</th>
                            <th class="py-4 px-3 text-left rounded-r-xl">Discount Price</th>
                        </tr>
                    </thead>
                    <tbody id="priceTableBody">
                        <!-- New rows will be added here -->
                    </tbody>
                </table>
            </div>
            <button
                onclick="window.location.href='/spadmin/products'"
                id="saveButton"
                class="shadow-xl p-3 w-full mt-3 max-w-2xl rounded-md bg-[#163F75] hover:bg-[#163F75]/90 text-white"
            >
                Save
            </button>
        </div>
    </div>
</div>

<script>
    function handleCategoryChange() {
        const select = document.getElementById("category");
        const display = document.getElementById("selectedCategory");
        const selectedText = select.options[select.selectedIndex].text;
        display.textContent = selectedText;
    }

    const categorySelect = document.getElementById("category");
    const addItemInput = document.getElementById("addItemInput");
    const addItemButton = document.getElementById("addItemBtn");
    const priceTableBody = document.getElementById("priceTableBody");

    // Enable/disable input based on category
    function updateInputState() {
        const isCategorySelected = categorySelect.value !== "";
        addItemInput.disabled = !isCategorySelected;
        addItemButton.disabled = !isCategorySelected;

        if (isCategorySelected) {
            addItemButton.classList.remove("bg-[#b6c1d2]");
            addItemButton.classList.add("bg-[#163F75]", "hover:bg-[#0f2f59]");
        } else {
            addItemButton.classList.remove("bg-[#163F75]", "hover:bg-[#0f2f59]");
            addItemButton.classList.add("bg-[#b6c1d2]");
        }
    }

    categorySelect.addEventListener("change", updateInputState);
    window.addEventListener("load", updateInputState);

    addItemButton.addEventListener("click", () => {
        const item = addItemInput.value.trim();
        if (!item) return;

        // Create a new table row
        const row = document.createElement("tr");
        row.setAttribute("data-item", item); // custom attribute to identify row

        row.innerHTML = `
        <td class="py-4 px-3 text-gray-500">${item}</td>
        <td class="py-4 px-3">
            <input type="number" placeholder="0.000" class="w-[100px] border border-red-400 text-center text-gray-500 rounded-xl py-1" />
        </td>
        <td class="py-4 px-3">
            <input type="number" placeholder="0.000" class="w-[100px] border border-[#54B7C5] text-center font-semibold text-gray-800 rounded-xl py-1" />
        </td>
    `;
        priceTableBody.appendChild(row);

        // Create chip with close button
        const chip = document.createElement("div");
        chip.className =
            "flex items-center px-4 py-1 m-2 rounded-md bg-[#54B7C5] text-white text-sm";
        chip.setAttribute("data-item", item); // custom attribute to identify chip
        chip.innerHTML = `
        <span>${item}</span>
        <button class="ml-2 text-white font-bold hover:text-red-200">&times;</button>
    `;

        // Handle chip remove
        chip.querySelector("button").addEventListener("click", () => {
            // Remove chip
            chip.remove();

            // Remove corresponding table row
            const matchingRow = priceTableBody.querySelector(`tr[data-item="${item}"]`);
            if (matchingRow) matchingRow.remove();

            // If no more chips left, hide the price section
            const remainingChips = document.querySelectorAll("#itemsContainer > div");
            if (remainingChips.length === 0) {
                document.getElementById("priceSection").classList.add("hidden");
            }
        });

        document.getElementById("itemsContainer").appendChild(chip);

        // Show price section
        document.getElementById("priceSection").classList.remove("hidden");

        // Handle line-through logic
        const originalInput = row.querySelector("td:nth-child(2) input");
        const discountInput = row.querySelector("td:nth-child(3) input");

        function updateLineThrough() {
            const origVal = originalInput.value.trim();
            const discVal = discountInput.value.trim();

            if (origVal !== "" && discVal !== "") {
                originalInput.classList.add("line-through");
            } else {
                originalInput.classList.remove("line-through");
            }
        }

        originalInput.addEventListener("input", updateLineThrough);
        discountInput.addEventListener("input", updateLineThrough);

        addItemInput.value = "";
    });
</script>
