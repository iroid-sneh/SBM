<html>
    <head>
        <style>
            @keyframes shake {
                0%,
                100% {
                    transform: translateX(0);
                }
                20%,
                60% {
                    transform: translateX(-5px);
                }
                40%,
                80% {
                    transform: translateX(5px);
                }
            }
            .shake {
                animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
            }
        </style>
        <script src="https://cdn.tailwindcss.com"></script>
        <script src="https://unpkg.com/flowbite@1.6.5/dist/flowbite.min.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    </head>
    <body
        class="bg-cover bg-no-repeat min-h-screen relative overflow-hidden bg-gradient-to-t from-[#163F75]/50 to-[#54B7C5]/50"
    >
        <% if (messages.success && messages.success.length > 0) { %>
        <script>
            const SBM_PRIMARY = "#54B7C5";
            Swal.fire({
                icon: "success",
                title: "Success",
                text: `<%= messages.success[0]?.replace(/"/g, '') %>`,
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                background: "#ffffff",
                color: "#222",
                iconColor: SBM_PRIMARY,
                customClass: {
                    popup: "shadow-lg rounded-xl border border-gray-200",
                    title: "text-[#222] font-medium",
                    timerProgressBar: "bg-[#54B7C5]",
                },
            });
        </script>
        <% } %> <% if (messages.error && messages.error.length > 0) { %>
        <script>
            Swal.fire({
                icon: "error",
                title: "Error",
                text: `<%= messages.error[0]?.replace(/"/g, '') %>`,
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                background: "#ffffff",
                color: "#222",
                iconColor: "#e74c3c",
                customClass: {
                    popup: "shadow-lg rounded-xl border border-gray-200",
                    title: "text-[#222] font-medium",
                    timerProgressBar: "bg-red-400",
                },
            });
        </script>
        <% } %>

        <!-- Background image with reduced opacity -->
        <div
            class="absolute inset-0 bg-cover bg-no-repeat opacity-20 z-0"
            style="
                background-image: url('<%= process.env.APP_URL_ADMIN %>/Icons/images/BMAuthBg.png');
            "
        ></div>
        <!-- Top Curve and Logo -->
        <div class="relative w-full">
            <img
                src="<%= process.env.APP_URL_ADMIN %>/Icons/images/BMAuthTop.svg"
                alt="Top Right Decoration"
                class="absolute top-0 right-0 w-[834px] pointer-events-none z-10"
            />
            <img
                src="<%= process.env.APP_URL_ADMIN %>/Icons/images/BMLogo.png"
                alt="BM Logo"
                class="absolute top-3 right-40 w-[280px] z-20"
            />
        </div>
        <form
            id="admin-form"
            enctype="multipart/form-data"
            action="javascript:void(0);"
            method="POST"
        >
            <div
                class="mx-auto flex items-start justify-between px-[220px] relative z-10 top-[30px]"
            >
                <div class="w-[472px] px-6">
                    <div id="auth-container">
                        <div class="space-y-3">
                            <div class="flex justify-center items-center">
                                <h2
                                    class="text-2xl items-start justify-start text-center text-white mb-1"
                                    id="form-title"
                                >
                                    Admin Profile
                                </h2>
                            </div>
                            <div class="flex justify-center mb-1">
                                <div class="relative w-24 h-24">
                                    <div
                                        id="profilePlaceholder"
                                        class="w-[95px] h-[95px] rounded-full border-4 border-[#57C1D1] flex items-center justify-center bg-gray-100 overflow-hidden"
                                    >
                                        <svg
                                            class="w-10 h-10 text-gray-500"
                                            xmlns="http://www.w3.org/2000/svg"
                                            fill="none"
                                            viewBox="0 0 24 24"
                                            stroke="currentColor"
                                            stroke-width="2"
                                        >
                                            <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                d="M7 17v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3Zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
                                            />
                                        </svg>
                                    </div>
                                    <input
                                        id="imageUpload"
                                        name="adminProfilePhoto"
                                        type="file"
                                        accept="image/*"
                                        class="hidden"
                                    />
                                    <label
                                        for="imageUpload"
                                        class="absolute bottom-0 right-0 bg-[#57C1D1] text-white p-2 rounded-full shadow-[0px_4px_10px_rgba(0,0,0,0.05)] cursor-pointer"
                                    >
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            class="h-4 w-4"
                                            fill="none"
                                            viewBox="0 0 24 24"
                                            stroke="currentColor"
                                        >
                                            <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                stroke-width="2"
                                                d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
                                            />
                                            <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                stroke-width="2"
                                                d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"
                                            />
                                        </svg>
                                    </label>
                                </div>
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <input
                                    name="firstName"
                                    type="text"
                                    placeholder="First Name"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <input
                                    name="middleName"
                                    type="text"
                                    placeholder="Middle Name"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <input
                                    name="lastName"
                                    type="text"
                                    placeholder="Last Name"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                            </div>
                            <div class="flex bg-white px-4 py-4 rounded-[10px] border shadow-xl">
                                <select
                                    name="role"
                                    id="roleSelect"
                                    class="w-full h-[21px] text-m text-gray-400 focus:outline-none"
                                >
                                    <option value="" hidden>Your Role</option>
                                    <option value="admin">Admin</option>
                                    <option value="management">Management</option>
                                </select>
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <input
                                    name="email"
                                    type="text"
                                    placeholder="Email"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <div class="relative flex items-center mr-3">
                                    <select
                                        name="countryCode"
                                        class="z-10 absolute inset-0 w-full h-full opacity-0 cursor-pointer"
                                        onchange="updateFlag(this)"
                                        data-flag-id="admin-contact-flag"
                                        data-code-id="admin-contact-code"
                                    >
                                        <% countries.forEach((country, index) => { %>
                                        <option value='<%= country.countryCode %>' data-flag='<%= country.flag %>' <%= index === 0 ? 'selected' : '' %>
                                        >
                                            <%= country.countryCode %> <%= country.name %>
                                        </option>
                                        <% }) %>
                                    </select>

                                    <img
                                        id="admin-contact-flag"
                                        src="<%= countries[0]?.flag %>"
                                        class="w-10 h-6 object-cover border rounded-sm z-0"
                                        alt="Country flag"
                                    />

                                    <svg
                                        class="w-2.5 h-2.5 text-gray-600 ml-1 pointer-events-none"
                                        fill="none"
                                        viewBox="0 0 10 6"
                                    >
                                        <path
                                            stroke="currentColor"
                                            stroke-width="2"
                                            d="M1 1l4 4 4-4"
                                        />
                                    </svg>
                                </div>
                                <input
                                    name="contactNumber"
                                    type="text"
                                    placeholder="Contact Number"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <input
                                    name="password"
                                    id="password-input"
                                    type="password"
                                    placeholder="Create Password"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                                <button type="button" id="togglePassword" class="ml-2">
                                    <svg
                                        id="eyeIcon"
                                        class="w-5 h-5"
                                        fill="none"
                                        stroke="#111"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                                        />
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                                        />
                                    </svg>
                                </button>
                            </div>
                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <input
                                    type="password"
                                    placeholder="Confirm Password"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                                <button type="button" class="ml-2">
                                    <svg
                                        id="eyeIcon"
                                        class="w-5 h-5"
                                        fill="none"
                                        stroke="#111"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                                        />
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                                        />
                                    </svg>
                                </button>
                            </div>
                            <!-- <div class="flex justify-center">
                                <button
                                    class="bg-[#163F75] hover:bg-[#163F75]/80 text-white text-md mt-2 font-medium rounded-xl w-[300px] py-3 transition"
                                >
                                    Add Admin Assistant
                                </button>
                            </div> -->
                        </div>
                    </div>
                </div>
                <div class="absolute right-[15%] top-1/2 -translate-y-[-40px]">
                    <h2 class="text-5xl text-white">We will transfer you to the</h2>
                    <h2 class="text-5xl mt-2 text-white">modern property management</h2>
                </div>
            </div>
            <div>
                <img
                    src="<%= process.env.APP_URL_ADMIN %>/Icons/images/BMAuthBottom.svg"
                    alt="Bottom Left Decoration"
                    class="absolute bottom-0 left-0 w-[1044px] pointer-events-none"
                />
                <div
                    class="absolute bottom-8 left-0 w-full flex items-center justify-between px-[280px]"
                >
                    <div class="">
                        <h2 class="text-4xl font-semibold text-gray-800">
                            Step 2
                            <span class="text-gray-500 font-normal">out of 6</span>
                        </h2>
                    </div>
                    <div class="flex items-center gap-6">
                        <button
                            onclick="window.location.href='<%= process.env.APP_ADMIN_URL %>/bmadmin/bussinessdetails'"
                            class="text-base font-medium text-white hover:underline"
                        >
                            &lt; Back
                        </button>

                        <button
                            type="submit"
                            class="bg-[#54B7C5] hover:bg-[#54B7C5]/80 text-white text-lg font-medium rounded-xl px-[100px] py-3 transition"
                        >
                            Save & Continue
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </body>
    <!-- OTP Modal -->
    <div
        id="otp-modal"
        class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50"
    >
        <div class="bg-white w-[450px] max-w-full rounded-2xl shadow-lg overflow-hidden">
            <!-- Top Bar -->
            <div class="flex justify-between items-center px-6 py-4 border-b border-gray-200">
                <h2 class="text-lg font-semibold text-gray-800">Verification</h2>
                <button
                    class="text-red-500 text-sm font-medium hover:underline"
                    onclick="closeOTPModal()"
                >
                    Close ✕
                </button>
            </div>
            <form id="otp-form" method="post" enctype="multipart/form-data">
                <!-- Modal Content -->
                <div class="px-6 py-6 text-center">
                    <!-- Logo -->
                    <div class="flex justify-center mb-4">
                        <img
                            src="../Icons/images/SuperLogo.png"
                            alt="Logo"
                            class="h-16 object-contain"
                        />
                    </div>

                    <!-- Title -->
                    <h3 class="text-xl font-bold text-gray-900 mb-1">Enter Verification Code</h3>

                    <!-- Subtitle -->
                    <p class="text-sm text-gray-500 mb-6">
                        We have sent a verification code to your
                        <br />
                        phone number +973 12345 12345
                    </p>

                    <!-- OTP Inputs -->
                    <div class="flex justify-center gap-3 mb-6" id="otp-inputs">
                        <input
                            type="text"
                            maxlength="1"
                            class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg shadow-sm otp-digit"
                            data-index="0"
                        />
                        <input
                            type="text"
                            maxlength="1"
                            class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg shadow-sm otp-digit"
                            data-index="1"
                        />
                        <input
                            type="text"
                            maxlength="1"
                            class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg shadow-sm otp-digit"
                            data-index="2"
                        />
                        <input
                            type="text"
                            maxlength="1"
                            class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg shadow-sm otp-digit"
                            data-index="3"
                        />
                        <input
                            type="text"
                            maxlength="1"
                            class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg shadow-sm otp-digit"
                            data-index="4"
                        />
                        <input
                            type="text"
                            maxlength="1"
                            class="w-12 h-12 text-center text-xl font-bold border border-gray-300 rounded-lg shadow-sm otp-digit"
                            data-index="5"
                        />
                    </div>

                    <!-- Timer -->
                    <div class="text-sm text-gray-500 mb-6">
                        Didn't receive OTP?
                        <span id="otp-timer" class="text-[#60b5c9] font-medium">00:44</span>
                    </div>

                    <!-- Submit Button -->
                    <button
                        type="submit"
                        class="bg-[#60b5c9] text-white rounded-md w-full py-2 font-semibold hover:bg-[#4fa3b8] transition"
                    >
                        Submit
                    </button>
                </div>
            </form>
        </div>
    </div>
    <!-- Add this at the bottom of your body (before scripts) -->
    <div id="otp-error-toast" class="fixed top-4 right-4 hidden">
        <div
            class="flex items-center w-full max-w-xs p-4 mb-4 text-white bg-red-500 rounded-lg shadow"
        >
            <div
                class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-500 bg-red-100 rounded-lg"
            >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path
                        fill-rule="evenodd"
                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                        clip-rule="evenodd"
                    ></path>
                </svg>
            </div>
            <div class="ml-3 text-sm font-normal" id="otp-error-message">
                Please enter complete 6-digit OTP
            </div>
            <button
                type="button"
                class="ml-auto -mx-1.5 -my-1.5 bg-red-100 text-red-500 rounded-lg p-1.5 inline-flex h-8 w-8 hover:bg-red-200"
            >
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path
                        fill-rule="evenodd"
                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                        clip-rule="evenodd"
                    ></path>
                </svg>
            </button>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        let timerInterval;

        function updateFlag(selectEl) {
            const selectedOption = selectEl.options[selectEl.selectedIndex];
            const flagUrl = selectedOption.dataset.flag;
            const countryCode = selectedOption.value;

            const flagImgId = selectEl.dataset.flagId;
            const codeSpanId = selectEl.dataset.codeId;

            if (flagImgId && flagUrl) {
                const flagImg = document.getElementById(flagImgId);
                if (flagImg) flagImg.src = flagUrl;
            }

            if (codeSpanId) {
                const codeSpan = document.getElementById(codeSpanId);
                if (codeSpan) codeSpan.innerText = countryCode;
            }
        }

        function setupOTPInputs() {
            const otpInputs = document.querySelectorAll(".otp-digit");

            otpInputs.forEach((input, index) => {
                input.addEventListener("input", (e) => {
                    let value = e.target.value;

                    if (!/^\d$/.test(value)) {
                        e.target.value = "";
                        return;
                    }

                    if (index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                });

                input.addEventListener("keydown", (e) => {
                    if (e.key === "Backspace" && e.target.value === "" && index > 0) {
                        otpInputs[index - 1].focus();
                    }
                });

                input.addEventListener("keypress", (e) => {
                    if (!/[0-9]/.test(e.key)) {
                        e.preventDefault();
                    }
                });

                input.addEventListener("focus", (e) => {
                    e.target.select();
                });
            });
        }

        function clearOTPInputs() {
            const otpInputs = document.querySelectorAll(".otp-digit");
            otpInputs.forEach((input) => {
                input.value = "";
                input.classList.remove("border-red-500", "ring-2", "ring-red-200");
            });
            hideOtpError();
            const timerDisplay = document.getElementById("otp-timer");
            if (timerDisplay.innerText === "Send OTP Again") {
                timerDisplay.innerText = "00:50";
                timerDisplay.classList.remove("text-[#163f75]", "cursor-pointer");
                timerDisplay.classList.add("text-blue-600");
                timerDisplay.onclick = null;
            }
        }

        function showOTPModal() {
            startOTPTimer();
            document.getElementById("otp-modal").classList.remove("hidden");
            setupOTPInputs();
        }

        function startOTPTimer() {
            const timerDisplay = document.getElementById("otp-timer");
            let timeLeft = 50;

            timerDisplay.classList.remove("cursor-pointer", "text-red-500");
            timerDisplay.classList.add("text-blue-600");
            timerDisplay.innerText = formatTime(timeLeft);

            timerInterval = setInterval(() => {
                timeLeft--;

                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    timerDisplay.innerText = "Send OTP Again";
                    timerDisplay.classList.remove("text-blue-600");
                    timerDisplay.classList.add("text-[#163f75]", "cursor-pointer");
                    timerDisplay.onclick = resendOTP;
                } else {
                    timerDisplay.innerText = formatTime(timeLeft);
                }
            }, 1000);
        }

        function formatTime(seconds) {
            const m = String(Math.floor(seconds / 60)).padStart(2, "0");
            const s = String(seconds % 60).padStart(2, "0");
            return `${m}:${s}`;
        }

        function resendOTP() {
            startOTPTimer();
            const timerDisplay = document.getElementById("otp-timer");
            timerDisplay.onclick = null;
            // Make an AJAX call to resend the OTP
            $.ajax({
                url: "/bmadmin/resendotp",
                type: "POST",
                success: function (response) {
                    if (response.success) {
                        startOTPTimer();
                        Swal.fire({
                            icon: "success",
                            title: "Success",
                            text: response.message,
                            toast: true,
                            position: "top-end",
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                        });
                    } else {
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred while resending the OTP.",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                    });
                },
            });
        }

        function closeOTPModal() {
            clearOTPInputs(); // must come before hiding modal
            clearInterval(timerInterval);
            document.getElementById("otp-modal").classList.add("hidden");
        }

        function showOtpError(message) {
            const toast = document.getElementById("otp-error-toast");
            const messageEl = document.getElementById("otp-error-message");
            messageEl.textContent = message || "Please enter complete 6-digit OTP";
            toast.classList.remove("hidden");
            setTimeout(hideOtpError, 5000); // Auto-hide after 5 seconds
        }

        function hideOtpError() {
            document.getElementById("otp-error-toast").classList.add("hidden");
        }

        const imageUpload = document.getElementById("imageUpload");
        const profilePlaceholder = document.getElementById("profilePlaceholder");

        imageUpload.addEventListener("change", function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    profilePlaceholder.innerHTML = `
          <img src="${e.target.result}" alt="Profile" class="w-full h-full object-cover rounded-full" />
        `;
                };
                reader.readAsDataURL(file);
            }
        });

        $("#admin-form").submit(function (e) {
            const errors = [];

            const profilePhotoUploaded = document.getElementById("imageUpload").files.length > 0;
            const firstName = document.querySelector('input[name="firstName"]').value.trim();
            const middleName = document.querySelector('input[name="middleName"]').value.trim();
            const lastName = document.querySelector('input[name="lastName"]').value.trim();
            const role = document.querySelector('select[name="role"]').value.trim();
            const email = document.querySelector('input[name="email"]').value.trim();
            const contactNumber = document
                .querySelector('input[name="contactNumber"]')
                .value.trim();
            const countryCodeEl = document.querySelector('select[name="countryCode"]');
            const countryCode = countryCodeEl ? countryCodeEl.value.trim() : "";
            const password = document.querySelector('input[name="password"]').value.trim();

            if (!profilePhotoUploaded) errors.push("Profile Photo is required.");
            if (!firstName) errors.push("First Name is required.");
            if (!middleName) errors.push("Middle Name is required.");
            if (!lastName) errors.push("Last Name is required.");
            if (!role || role === "") errors.push("Role selection is required.");
            if (!email || !email.includes("@")) errors.push("Valid Email is required.");
            if (!countryCode) errors.push("Country Code is required.");
            if (!contactNumber) errors.push("Contact Number is required.");
            if (!password) errors.push("Password must be at least 6 characters.");

            e.preventDefault(); // ✅ Always stop default

            if (errors.length > 0) {
                let swalOptions = {
                    icon: "error",
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 4000,
                    timerProgressBar: true,
                    background: "#fff",
                    iconColor: "#e74c3c",
                    color: "#222",
                    customClass: {
                        popup: "shadow-lg rounded-xl border border-gray-200",
                        title: "text-[#222] font-medium",
                        timerProgressBar: "bg-red-400",
                    },
                };

                const totalRequiredFieldsCount = 8;
                if (errors.length === totalRequiredFieldsCount) {
                    swalOptions.title = "Please fill all required fields.";
                    swalOptions.text = "";
                } else if (errors.length === 1) {
                    swalOptions.title = errors[0];
                    swalOptions.text = "";
                } else {
                    swalOptions.title = "Please input these fields:";
                    swalOptions.html = errors.map((e) => `<div>${e}</div>`).join("");
                }

                Swal.fire(swalOptions);
                return; // ✅ STOP here — do NOT proceed to AJAX
            }

            // ✅ Only reached when form is valid
            const formData = new FormData(this);

            $.ajax({
                url: "/bmadmin/adminprofile/step2",
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.success) {
                        startOTPTimer();
                        $("#otp-modal").removeClass("hidden").addClass("flex");
                        setupOTPInputs();
                    }
                },
                error: function () {
                    console.error("Error submitting form");
                },
            });
        });

        $("#otp-form")
            .off("submit")
            .on("submit", function (e) {
                e.preventDefault();
                const otpDigits = document.querySelectorAll(".otp-digit");
                const otp = Array.from(otpDigits)
                    .map((digit) => digit.value)
                    .join("");

                if (otp.length === 6) {
                    $.ajax({
                        url: "/bmadmin/verifyotp",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ otp }),
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Success",
                                    text: response.message,
                                    toast: true,
                                    position: "top-end",
                                    showConfirmButton: false,
                                    timer: 3000,
                                    timerProgressBar: true,
                                });
                                closeOTPModal();
                                window.location.href = "/bmadmin/residencedetails";
                            }
                        },
                        error: function (response) {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Invalid or expired OTP.",
                                toast: true,
                                position: "top-end",
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true,
                            });
                        },
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Please enter complete 6-digit OTP",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                    });
                }
            });

        $("#otp-form")
            .off("submit")
            .on("submit", function (e) {
                e.preventDefault();
                const otpDigits = document.querySelectorAll(".otp-digit");
                const otp = Array.from(otpDigits)
                    .map((digit) => digit.value)
                    .join("");

                if (otp.length === 6) {
                    $.ajax({
                        url: "/bmadmin/verifyotp",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ otp }),
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Success",
                                    text: response.message,
                                    toast: true,
                                    position: "top-end",
                                    showConfirmButton: false,
                                    timer: 3000,
                                    timerProgressBar: true,
                                });
                                closeOTPModal();
                                window.location.href = "/bmadmin/residencedetails";
                            }
                        },
                        error: function (response) {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Invalid or expired OTP.",
                                toast: true,
                                position: "top-end",
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true,
                            });
                        },
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Please enter complete 6-digit OTP",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                    });
                }
            });
    </script>
</html>
