<html>
    <head>
        <script src="https://cdn.tailwindcss.com"></script>
        <script src="https://unpkg.com/flowbite@1.6.5/dist/flowbite.min.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <style>
            .selected-day {
                background-color: #54b7c5 !important;
                color: white !important;
                border-color: #54b7c5 !important;
            }
        </style>
    </head>
    <body
        class="bg-cover bg-no-repeat min-h-screen relative overflow-hidden bg-gradient-to-t from-[#163F75]/50 to-[#54B7C5]/50"
    >
        <% if (messages.success && messages.success.length > 0) { %>
        <script>
            const SBM_PRIMARY = "#54B7C5";
            Swal.fire({
                icon: "success",
                title: "Success",
                text: `<%= messages.success[0]?.replace(/"/g, '') %>`,
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                background: "#ffffff",
                color: "#222",
                iconColor: SBM_PRIMARY,
                customClass: {
                    popup: "shadow-lg rounded-xl border border-gray-200",
                    title: "text-[#222] font-medium",
                    timerProgressBar: "bg-[#54B7C5]",
                },
            });
        </script>
        <% } %> <% if (messages.error && messages.error.length > 0) { %>
        <script>
            Swal.fire({
                icon: "error",
                title: "Error",
                text: `<%= messages.error[0]?.replace(/"/g, '') %>`,
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                background: "#ffffff",
                color: "#222",
                iconColor: "#e74c3c",
                customClass: {
                    popup: "shadow-lg rounded-xl border border-gray-200",
                    title: "text-[#222] font-medium",
                    timerProgressBar: "bg-red-400",
                },
            });
        </script>
        <% } %>

        <div
            class="absolute inset-0 bg-cover bg-no-repeat opacity-20 z-0"
            style="
                background-image: url('<%= process.env.APP_URL_ADMIN %>/Icons/images/BMAuthBg.png');
            "
        ></div>
        <div class="relative w-full">
            <img
                src="<%= process.env.APP_URL_ADMIN %>/Icons/images/BMAuthTop.svg"
                alt="Top Right Decoration"
                class="absolute top-0 right-0 w-[834px] pointer-events-none z-10"
            />
            <img
                src="<%= process.env.APP_URL_ADMIN %>/Icons/images/BMLogo.png"
                alt="BM Logo"
                class="absolute top-3 right-40 w-[280px] z-20"
            />
        </div>

        <form
            id="business-form"
            method="post"
            class="space-y-3"
            action="/bmadmin/bussinessdetails/step1"
            enctype="multipart/form-data"
        >
            <div
                class="mx-auto flex items-start justify-between px-[220px] relative z-10 top-[180px]"
            >
                <div class="w-[472px] flex-shrink-0 px-6">
                    <div id="auth-container">
                        <div class="flex justify-center items-center">
                            <h2
                                class="text-2xl items-start justify-start text-center text-white mb-6"
                                id="form-title"
                            >
                                Bussiness Details
                            </h2>
                        </div>
                        <div class="space-y-3">
                            <div class="flex justify-center mb-6">
                                <div class="relative w-24 h-24">
                                    <div
                                        id="profilePlaceholder"
                                        class="w-[95px] h-[95px] rounded-full border-4 border-[#57C1D1] flex items-center justify-center bg-gray-100 overflow-hidden"
                                    >
                                        <svg
                                            class="w-10 h-10 text-gray-500"
                                            xmlns="http://www.w3.org/2000/svg"
                                            fill="none"
                                            viewBox="0 0 24 24"
                                            stroke="currentColor"
                                            stroke-width="2"
                                        >
                                            <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                d="M7 17v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3Zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
                                            />
                                        </svg>
                                    </div>

                                    <input
                                        id="imageUpload"
                                        name="businessLogo"
                                        type="file"
                                        accept="image/*"
                                        class="hidden"
                                    />

                                    <label
                                        for="imageUpload"
                                        class="absolute bottom-0 right-0 bg-[#57C1D1] text-white p-2 rounded-full shadow-[0px_4px_10px_rgba(0,0,0,0.05)] cursor-pointer"
                                    >
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            class="h-4 w-4"
                                            fill="none"
                                            viewBox="0 0 24 24"
                                            stroke="currentColor"
                                        >
                                            <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                stroke-width="2"
                                                d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
                                            />
                                            <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                stroke-width="2"
                                                d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"
                                            />
                                        </svg>
                                    </label>
                                </div>
                            </div>
                            <input
                                name="commercialName"
                                type="text"
                                placeholder="Commercial Name"
                                class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl"
                            />

                            <div
                                class="flex items-center bg-white px-4 py-4 rounded-[10px] border shadow-xl"
                            >
                                <div class="relative flex items-center mr-3">
                                    <select
                                        name="countryCode"
                                        class="z-10 absolute inset-0 w-full h-full opacity-0 cursor-pointer"
                                        onchange="updateFlag(this)"
                                        data-flag-id="business-landline-flag"
                                        data-code-id="business-landline-code"
                                    >
                                        <% countries.forEach((country, index) => { %>
                                        <option value='<%= country.countryCode %>' data-flag='<%= country.flag %>' <%= index === 0 ? 'selected' : '' %>
                                        >
                                            <%= country.countryCode %> <%= country.name %>
                                        </option>
                                        <% }) %>
                                    </select>

                                    <img
                                        id="business-landline-flag"
                                        src="<%= countries[0]?.flag %>"
                                        class="w-10 h-6 object-cover border rounded-sm z-0"
                                        alt="Country flag"
                                    />

                                    <svg
                                        class="w-2.5 h-2.5 text-gray-600 ml-1 pointer-events-none"
                                        fill="none"
                                        viewBox="0 0 10 6"
                                    >
                                        <path
                                            stroke="currentColor"
                                            stroke-width="2"
                                            d="M1 1l4 4 4-4"
                                        />
                                    </svg>
                                </div>
                                <input
                                    name="businessLandline"
                                    type="text"
                                    placeholder="Business Landline"
                                    class="w-full h-[14px] text-m focus:outline-none"
                                />
                            </div>

                            <div
                                class="items-center grid grid-cols-[8fr_0.1fr_8fr_0.1fr] gap-1 rounded-[10px]"
                            >
                                <input
                                    name="VATnumber"
                                    type="text"
                                    placeholder="VAT Number"
                                    class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl"
                                />
                                <svg
                                    id="help-icon"
                                    data-tooltip-target="vat-num-tooltip"
                                    data-tooltip-placement="left"
                                    class=""
                                    width="16"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path
                                        d="M8 0C6.41775 0 4.87103 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346626 6.40034 -0.15496 8.00887 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C16 5.87827 15.1571 3.84344 13.6569 2.34315C12.1566 0.842855 10.1217 0 8 0ZM7.89107 13.263C7.70995 13.263 7.5329 13.2093 7.38231 13.1086C7.23171 13.008 7.11434 12.865 7.04503 12.6977C6.97572 12.5303 6.95758 12.3462 6.99292 12.1686C7.02825 11.9909 7.11547 11.8278 7.24354 11.6997C7.37161 11.5716 7.53478 11.4844 7.71241 11.4491C7.89005 11.4137 8.07418 11.4319 8.24151 11.5012C8.40884 11.5705 8.55186 11.6879 8.65248 11.8385C8.7531 11.9891 8.80681 12.1661 8.80681 12.3472C8.80636 12.59 8.70974 12.8226 8.5381 12.9943C8.36646 13.1659 8.1338 13.2625 7.89107 13.263ZM8.89192 8.81702C8.89192 8.81702 8.8017 8.84936 8.8017 8.90213V9.62893C8.8017 9.87068 8.70567 10.1025 8.53473 10.2735C8.3638 10.4444 8.13196 10.5404 7.89021 10.5404C7.64847 10.5404 7.41663 10.4444 7.24569 10.2735C7.07476 10.1025 6.97873 9.87068 6.97873 9.62893V8.90213C6.98273 8.49886 7.11316 8.107 7.35165 7.78179C7.59014 7.45657 7.92467 7.21439 8.30809 7.08936C8.57248 7.00113 8.80131 6.82985 8.96049 6.60105C9.11967 6.37225 9.20069 6.09815 9.19149 5.81957C9.17382 5.48274 9.02876 5.16522 8.78572 4.93134C8.54268 4.69746 8.21982 4.56472 7.88256 4.56C7.63973 4.56106 7.40213 4.63063 7.19708 4.76071C6.99202 4.89079 6.82784 5.07609 6.72341 5.29532C6.67144 5.40317 6.59873 5.49973 6.50945 5.57948C6.42016 5.65924 6.31604 5.72062 6.20303 5.76014C5.97479 5.83994 5.7242 5.82581 5.50639 5.72085C5.28857 5.61589 5.12137 5.42871 5.04157 5.20047C4.96176 4.97223 4.9759 4.72164 5.08085 4.50383C5.33215 3.9771 5.72689 3.53193 6.21976 3.2194C6.71263 2.90688 7.28364 2.73969 7.86724 2.73702H7.88596C8.69671 2.74172 9.47434 3.05929 10.0566 3.62348C10.6389 4.18767 10.9808 4.9549 11.0111 5.76511C11.0336 6.43375 10.8398 7.09182 10.4582 7.6414C10.0767 8.19099 9.52797 8.60271 8.89362 8.81532L8.89192 8.81702Z"
                                        fill="#999999"
                                    />
                                </svg>
                                <div
                                    id="vat-num-tooltip"
                                    role="tooltip"
                                    class="absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip"
                                >
                                    Value Added Tax (VAT). A tax on the value added to goods and
                                    services.
                                    <div class="tooltip-arrow" data-popper-arrow></div>
                                </div>
                                <input
                                    name="CRnumber"
                                    type="text"
                                    placeholder="CR Number"
                                    class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl"
                                />
                                <svg
                                    id="help-icon"
                                    data-tooltip-target="cr-tooltip"
                                    data-tooltip-placement="top"
                                    width="16"
                                    height="16"
                                    viewBox="0 0 16 16"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path
                                        d="M8 0C6.41775 0 4.87103 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346626 6.40034 -0.15496 8.00887 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C16 5.87827 15.1571 3.84344 13.6569 2.34315C12.1566 0.842855 10.1217 0 8 0ZM7.89107 13.263C7.70995 13.263 7.5329 13.2093 7.38231 13.1086C7.23171 13.008 7.11434 12.865 7.04503 12.6977C6.97572 12.5303 6.95758 12.3462 6.99292 12.1686C7.02825 11.9909 7.11547 11.8278 7.24354 11.6997C7.37161 11.5716 7.53478 11.4844 7.71241 11.4491C7.89005 11.4137 8.07418 11.4319 8.24151 11.5012C8.40884 11.5705 8.55186 11.6879 8.65248 11.8385C8.7531 11.9891 8.80681 12.1661 8.80681 12.3472C8.80636 12.59 8.70974 12.8226 8.5381 12.9943C8.36646 13.1659 8.1338 13.2625 7.89107 13.263ZM8.89192 8.81702C8.89192 8.81702 8.8017 8.84936 8.8017 8.90213V9.62893C8.8017 9.87068 8.70567 10.1025 8.53473 10.2735C8.3638 10.4444 8.13196 10.5404 7.89021 10.5404C7.64847 10.5404 7.41663 10.4444 7.24569 10.2735C7.07476 10.1025 6.97873 9.87068 6.97873 9.62893V8.90213C6.98273 8.49886 7.11316 8.107 7.35165 7.78179C7.59014 7.45657 7.92467 7.21439 8.30809 7.08936C8.57248 7.00113 8.80131 6.82985 8.96049 6.60105C9.11967 6.37225 9.20069 6.09815 9.19149 5.81957C9.17382 5.48274 9.02876 5.16522 8.78572 4.93134C8.54268 4.69746 8.21982 4.56472 7.88256 4.56C7.63973 4.56106 7.40213 4.63063 7.19708 4.76071C6.99202 4.89079 6.82784 5.07609 6.72341 5.29532C6.67144 5.40317 6.59873 5.49973 6.50945 5.57948C6.42016 5.65924 6.31604 5.72062 6.20303 5.76014C5.97479 5.83994 5.7242 5.82581 5.50639 5.72085C5.28857 5.61589 5.12137 5.42871 5.04157 5.20047C4.96176 4.97223 4.9759 4.72164 5.08085 4.50383C5.33215 3.9771 5.72689 3.53193 6.21976 3.2194C6.71263 2.90688 7.28364 2.73969 7.86724 2.73702H7.88596C8.69671 2.74172 9.47434 3.05929 10.0566 3.62348C10.6389 4.18767 10.9808 4.9549 11.0111 5.76511C11.0336 6.43375 10.8398 7.09182 10.4582 7.6414C10.0767 8.19099 9.52797 8.60271 8.89362 8.81532L8.89192 8.81702Z"
                                        fill="#999999"
                                    />
                                </svg>
                                <div
                                    id="cr-tooltip"
                                    role="tooltip"
                                    class="absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip"
                                >
                                    The Company Registration, Number is a numerical combination used
                                    to identify a company and validate its registration.
                                    <div class="tooltip-arrow" data-popper-arrow></div>
                                </div>
                            </div>
                            <label class="flex items-start gap-2 text-sm text-white leading-snug">
                                <input type="checkbox" class="mt-1 scale-110 accent-[#163f75]" />
                                <p class="text-sm leading-snug">
                                    By checking this box, I declare that our business is exempted or
                                    not legally bound to any VAT registration in Bahrain
                                </p>
                            </label>
                            <input
                                name="businessEmail"
                                id="password-input"
                                type="email"
                                placeholder="Bussiness Email"
                                class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl"
                            />
                        </div>
                    </div>
                </div>

                <!-- RIGHT SIDE: Brief and Map with Dividers -->
                <div class="flex py-[190px]">
                    <!-- Divider 1 -->
                    <div class="w-px bg-gray-300 mx-8"></div>

                    <div class="w-[550px] mr-6 flex flex-col justify-between">
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-700">
                                Working Time
                            </label>
                            <div class="flex justify-between gap-4 mb-6">
                                <div class="relative w-40">
                                    <input
                                        name="openTime[]"
                                        id="open1"
                                        type="time"
                                        class="w-full px-4 pt-6 pb-2 bg-white rounded-xl text-gray-700 text-sm border focus:outline-none shadow-xl cursor-pointer"
                                    />
                                </div>
                                <div class="flex items-center">
                                    <span class="text-sm text-gray-600">to</span>
                                </div>
                                <div class="relative w-40">
                                    <input
                                        name="closeTime[]"
                                        id="close1"
                                        type="time"
                                        class="peer w-full px-4 pt-6 pb-2 bg-white rounded-xl text-gray-700 text-sm border focus:outline-none shadow-xl"
                                    />
                                </div>
                                <div class="relative w-40">
                                    <input
                                        name="openTime[]"
                                        id="open2"
                                        type="time"
                                        class="peer w-full px-4 pt-6 pb-2 bg-white rounded-xl text-gray-700 text-sm border focus:outline-none shadow-xl"
                                    />
                                </div>
                                <div class="flex items-center">
                                    <span class="text-sm text-gray-600">to</span>
                                </div>
                                <div class="relative w-40">
                                    <input
                                        name="closeTime[]"
                                        id="close2"
                                        type="time"
                                        class="peer w-full px-4 pt-6 pb-2 bg-white rounded-xl text-gray-700 text-sm border focus:outline-none shadow-xl"
                                    />
                                </div>
                            </div>
                            <div class="mb-6">
                                <label class="block mb-2 text-sm font-medium text-gray-700">
                                    Working Day
                                </label>
                                <div class="flex flex-wrap gap-1" id="workingDays">
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Sunday"
                                    >
                                        Sun
                                    </button>
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Monday"
                                    >
                                        Mon
                                    </button>
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Tuesday"
                                    >
                                        Tue
                                    </button>
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Wednesday"
                                    >
                                        Wed
                                    </button>
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Thursday"
                                    >
                                        Thu
                                    </button>
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Friday"
                                    >
                                        Fri
                                    </button>
                                    <button
                                        type="button"
                                        class="day-btn px-6 py-4 bg-white border rounded-xl shadow-xl hover:bg-gray-400 text-sm"
                                        data-day="Saturday"
                                    >
                                        Sat
                                    </button>
                                </div>
                                <div id="selectedDaysInput"></div>
                            </div>

                            <div class="grid grid-cols-3 gap-4 mb-4">
                                <select
                                    name="country"
                                    id="countrySelect"
                                    class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl"
                                >
                                    <option hidden selected>Select Country</option>
                                    <% countries.forEach((country) => { %>
                                    <option value="<%= country.name %>"><%= country.name %></option>
                                    <% }) %>
                                </select>
                                <select
                                    name="city"
                                    id="citySelect"
                                    class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl"
                                >
                                    <% cities.forEach(city => { %>
                                    <option hidden selected>Select City</option>
                                    <option value="<%= city.name %>"><%= city.name %></option>
                                    <% }) %>
                                </select>
                                <div class="relative">
                                    <input
                                        type="text"
                                        placeholder="Business Address"
                                        class="w-full px-4 py-3 bg-white rounded-xl text-gray-700 border text-sm focus:outline-none placeholder-gray-500 shadow-xl pr-10"
                                    />
                                    <svg
                                        class="absolute top-3.5 right-3 w-5 h-5 text-gray-500 pointer-events-none"
                                        fill="none"
                                        stroke="currentColor"
                                        stroke-width="2"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 104.5 4.5a7.5 7.5 0 0012.15 12.15z"
                                        />
                                    </svg>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Divider 2 -->
                    <div class="w-px bg-gray-300 mx-6"></div>

                    <div
                        id="map"
                        class="w-[370px] h-64 rounded-[10px] border shadow overflow-hidden flex items-bottom justify-bottom"
                    ></div>
                    <input type="hidden" name="addressLat" id="latitudeInput" />
                    <input type="hidden" name="addressLong" id="longitudeInput" />
                </div>
            </div>
            <div>
                <img
                    src="<%= process.env.APP_URL_ADMIN %>/Icons/images/BMAuthBottom.svg"
                    alt="Bottom Left Decoration"
                    class="absolute bottom-0 left-0 w-[1044px] pointer-events-none"
                />
                <div
                    class="absolute bottom-8 left-0 w-full flex items-center justify-between px-[280px]"
                >
                    <div class="">
                        <h2 class="text-4xl font-semibold text-gray-800">
                            Step 1
                            <span class="text-gray-500 font-normal">out of 6</span>
                        </h2>
                    </div>
                    <div class="flex items-center gap-6">
                        <button
                            type="submit"
                            class="bg-[#54B7C5] hover:bg-[#54B7C5]/80 text-white text-lg font-medium rounded-xl px-[100px] py-3 transition"
                        >
                            Save & Continue
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </body>
    <script>
        const map = L.map("map").setView([21.207988848466304, 72.835750579834], 13); // Example: Surat

        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
            maxZoom: 19,
            attribution:
                '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        }).addTo(map);

        let currentMarker = null;

        map.on("click", function (e) {
            const { lat, lng } = e.latlng;

            if (currentMarker) {
                map.removeLayer(currentMarker);
            }

            currentMarker = L.marker([lat, lng])
                .addTo(map)
                .bindPopup("Selected Location")
                .openPopup();

            document.getElementById("latitudeInput").value = lat;
            document.getElementById("longitudeInput").value = lng;
        });

        const imageUpload = document.getElementById("imageUpload");
        const profilePlaceholder = document.getElementById("profilePlaceholder");

        imageUpload.addEventListener("change", function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    profilePlaceholder.innerHTML = `
                  <img src="${e.target.result}" alt="Profile" class="w-full h-full object-cover rounded-full" />
                `;
                };
                reader.readAsDataURL(file);
            }
        });

        function updateFlag(selectEl) {
            const selectedOption = selectEl.options[selectEl.selectedIndex];
            const flagUrl = selectedOption.dataset.flag;
            const countryCode = selectedOption.value;

            const flagImgId = selectEl.dataset.flagId;
            const codeSpanId = selectEl.dataset.codeId;

            if (flagImgId && flagUrl) {
                const flagImg = document.getElementById(flagImgId);
                if (flagImg) flagImg.src = flagUrl;
            }

            if (codeSpanId) {
                const codeSpan = document.getElementById(codeSpanId);
                if (codeSpan) codeSpan.innerText = countryCode;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const selectedDaysInputContainer = document.getElementById("selectedDaysInput");

            document.querySelectorAll(".day-btn").forEach((btn) => {
                btn.addEventListener("click", () => {
                    const day = btn.dataset.day;
                    const isSelected = btn.classList.toggle("selected-day");

                    const existingInput = document.querySelector(
                        `input[name="workingDays[]"][value="${day}"]`
                    );

                    if (isSelected) {
                        const hiddenInput = document.createElement("input");
                        hiddenInput.type = "hidden";
                        hiddenInput.name = "workingDays";
                        hiddenInput.value = day;
                        hiddenInput.dataset.day = day;
                        document.getElementById("selectedDaysInput").appendChild(hiddenInput);
                    } else {
                        document
                            .querySelector(`#selectedDaysInput input[data-day="${day}"]`)
                            ?.remove();
                    }
                });
            });
        });

        // Form Validation Errors Toast
        document.getElementById("business-form").addEventListener("submit", function (e) {
            const errors = [];
            const commercialName = document
                .querySelector('input[name="commercialName"]')
                .value.trim();
            const businessEmail = document
                .querySelector('input[name="businessEmail"]')
                .value.trim();
            const businessLogoUploaded = document.getElementById("imageUpload").files.length > 0;
            const test1 = document.querySelector('select[name="countryCode"]');
            const countryCode = test1 ? test1.value.trim() : "";

            const businessLandline = document
                .querySelector('input[name="businessLandline"]')
                .value.trim();
            const VATnumber = document.querySelector('input[name="VATnumber"]').value.trim();
            const CRnumber = document.querySelector('input[name="CRnumber"]').value.trim();
            const city = document.querySelector('select[name="city"]').value.trim();
            const country = document.querySelector('select[name="country"]').value.trim();
            const workingDaysElements = document.querySelectorAll('input[name="workingDays"]');
            const workingDays = Array.from(workingDaysElements).map((el) => el.value);
            const openTimes = Array.from(document.querySelectorAll('input[name="openTime[]"]')).map(
                (el) => el.value.trim()
            );
            const closeTimes = Array.from(
                document.querySelectorAll('input[name="closeTime[]"]')
            ).map((el) => el.value.trim());
            const addressLat = document.querySelector('input[name="addressLat"]').value.trim();
            const addressLong = document.querySelector('input[name="addressLong"]').value.trim();
            if (!commercialName) errors.push("Commercial Name is required.");
            if (!businessEmail || !businessEmail.includes("@"))
                errors.push("Valid Business Email is required.");
            if (!businessLogoUploaded) errors.push("Business Logo is required.");
            if (!countryCode) errors.push("Country Code is required.");
            if (!businessLandline) errors.push("Business Landline is required.");
            if (!VATnumber) errors.push("VAT Number is required.");
            if (!CRnumber) errors.push("CR Number is required.");
            if (!country || country === "Select Country") errors.push("Country is required.");
            if (!city || city === "Select City") errors.push("City is required.");
            if (workingDays.length === 0) errors.push("At least one Working Day must be selected.");
            for (let i = 0; i < openTimes.length; i++) {
                if (!openTimes[i]) errors.push(`Open time #${i + 1} is required.`);
                if (!closeTimes[i]) errors.push(`Close time #${i + 1} is required.`);
            }
            if (!addressLat || isNaN(Number(addressLat)))
                errors.push("Select a Valid Address in Map.");

            if (errors.length > 0) {
                e.preventDefault();

                let swalOptions = {
                    icon: "error",
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 4000,
                    timerProgressBar: true,
                    background: "#fff",
                    iconColor: "#e74c3c",
                    color: "#222",
                    customClass: {
                        popup: "shadow-lg rounded-xl border border-gray-200",
                        title: "text-[#222] font-medium",
                        timerProgressBar: "bg-red-400",
                    },
                };
                const totalRequiredFieldsCount = 10 + openTimes.length + closeTimes.length;

                if (errors.length === totalRequiredFieldsCount) {
                    swalOptions.title = "All input fields are required.";
                    swalOptions.text = "";
                } else if (errors.length === 1) {
                    swalOptions.title = errors[0];
                    swalOptions.text = "";
                } else {
                    swalOptions.title = "Please input these fields:";
                    swalOptions.html = errors.map((e) => `<div>${e}</div>`).join("");
                }

                Swal.fire(swalOptions);
            }
        });
    </script>
</html>
